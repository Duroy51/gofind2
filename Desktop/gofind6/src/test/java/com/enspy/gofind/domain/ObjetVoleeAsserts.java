package com.enspy.gofind.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ObjetVoleeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetVoleeAllPropertiesEquals(ObjetVolee expected, ObjetVolee actual) {
        assertObjetVoleeAutoGeneratedPropertiesEquals(expected, actual);
        assertObjetVoleeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetVoleeAllUpdatablePropertiesEquals(ObjetVolee expected, ObjetVolee actual) {
        assertObjetVoleeUpdatableFieldsEquals(expected, actual);
        assertObjetVoleeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetVoleeAutoGeneratedPropertiesEquals(ObjetVolee expected, ObjetVolee actual) {
        assertThat(expected)
            .as("Verify ObjetVolee auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetVoleeUpdatableFieldsEquals(ObjetVolee expected, ObjetVolee actual) {
        assertThat(expected)
            .as("Verify ObjetVolee relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getMarque()).as("check marque").isEqualTo(actual.getMarque()))
            .satisfies(e -> assertThat(e.getDatevol()).as("check datevol").isEqualTo(actual.getDatevol()))
            .satisfies(e -> assertThat(e.getPhotoObjet()).as("check photoObjet").isEqualTo(actual.getPhotoObjet()))
            .satisfies(
                e ->
                    assertThat(e.getPhotoObjetContentType())
                        .as("check photoObjet contenty type")
                        .isEqualTo(actual.getPhotoObjetContentType())
            )
            .satisfies(e -> assertThat(e.getNumeroSerie()).as("check numeroSerie").isEqualTo(actual.getNumeroSerie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjetVoleeUpdatableRelationshipsEquals(ObjetVolee expected, ObjetVolee actual) {
        assertThat(expected)
            .as("Verify ObjetVolee relationships")
            .satisfies(e -> assertThat(e.getUtilisateur()).as("check utilisateur").isEqualTo(actual.getUtilisateur()));
    }
}
