package org.enspy.gofind.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeclarationVolAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeclarationVolAllPropertiesEquals(DeclarationVol expected, DeclarationVol actual) {
        assertDeclarationVolAutoGeneratedPropertiesEquals(expected, actual);
        assertDeclarationVolAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeclarationVolAllUpdatablePropertiesEquals(DeclarationVol expected, DeclarationVol actual) {
        assertDeclarationVolUpdatableFieldsEquals(expected, actual);
        assertDeclarationVolUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeclarationVolAutoGeneratedPropertiesEquals(DeclarationVol expected, DeclarationVol actual) {
        assertThat(expected)
            .as("Verify DeclarationVol auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeclarationVolUpdatableFieldsEquals(DeclarationVol expected, DeclarationVol actual) {
        assertThat(expected)
            .as("Verify DeclarationVol relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getMarque()).as("check marque").isEqualTo(actual.getMarque()))
            .satisfies(e -> assertThat(e.getModele()).as("check modele").isEqualTo(actual.getModele()))
            .satisfies(e -> assertThat(e.getNumeroserie()).as("check numeroserie").isEqualTo(actual.getNumeroserie()))
            .satisfies(e -> assertThat(e.getDatevol()).as("check datevol").isEqualTo(actual.getDatevol()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeclarationVolUpdatableRelationshipsEquals(DeclarationVol expected, DeclarationVol actual) {}
}
